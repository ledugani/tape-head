generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement())
  username     String           @unique
  email        String           @unique
  passwordHash String
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  collections  UserCollection[]
  wantlist     UserWantlist[]
}

model BoxSet {
  id          Int      @id @default(autoincrement())
  title       String
  year        Int?
  label       String?
  coverImage  String?
  description String?
  createdAt   DateTime @default(now())
  tapes       Tape[]   @relation("BoxSetTapes")
}

model Tape {
  id          Int              @id @default(autoincrement())
  title       String
  year        Int?
  genre       String?
  format      String?
  label       String?
  coverImage  String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  boxSetId    Int?
  boxSet      BoxSet?          @relation("BoxSetTapes", fields: [boxSetId], references: [id])
  collections UserCollection[]
  wantlist    UserWantlist[]
}

model UserCollection {
  id        Int      @id @default(autoincrement())
  userId    Int
  tapeId    Int
  condition String?
  notes     String?
  addedAt   DateTime @default(now())
  tape      Tape     @relation(fields: [tapeId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model UserWantlist {
  id       String   @id @default(uuid())
  userId   Int
  tapeId   Int
  priority Int?
  notes    String?
  addedAt  DateTime @default(now())
  tape     Tape     @relation(fields: [tapeId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@unique([userId, tapeId])
}
